###将等级为debug的日志信息输出到stdout和D,E这两个目的地,stdout和D,E的定义在下面的代码，可以任意起名
log4j.rootLogger = debug,stdout,D,E
###log4j.logger.com.neusoft =DEBUG      ##指定com.neusoft包下的所有类的等级为DEBUG

###定义名为stdout的输出端是哪种类型
log4j.appender.stdout = org.apache.log4j.ConsoleAppender
###log4j.appender.stdout.Encoding=UTF-8
log4j.appender.stdout.Target = System.out0

###定义名为stdout的输出端的layout是哪种类型
log4j.appender.stdout.layout = org.apache.log4j.PatternLayout

###如果使用pattern布局就要指定的打印信息的具体格式ConversionPattern
log4j.appender.stdout.layout.ConversionPattern = [%-5p] %d{yyyy-MM-dd HH:mm:ss,SSS} method:%l%n%m%n

###定义名为D的输出端的类型为每天产生一个日志文件
log4j.appender.D = org.apache.log4j.DailyRollingFileAppender
log4j.appender.D.Encoding=UTF-8
###定义名为D的输出端的文件名为E://logs/log.log可以自行修改。
log4j.appender.D.File = E://logs/log.log
log4j.appender.D.Append = true
log4j.appender.D.Threshold = DEBUG 
log4j.appender.D.layout = org.apache.log4j.PatternLayout
log4j.appender.D.layout.ConversionPattern = %-d{yyyy-MM-dd HH:mm:ss}  [ %t:%r ] - [ %p ]  %m%n

log4j.appender.E = org.apache.log4j.DailyRollingFileAppender
log4j.appender.E.Encoding=UTF-8
log4j.appender.E.File =E://logs/error.log 
log4j.appender.E.Append = true
log4j.appender.E.Threshold = ERROR 
log4j.appender.E.layout = org.apache.log4j.PatternLayout
log4j.appender.E.layout.ConversionPattern = %-d{yyyy-MM-dd HH:mm:ss}  [ %t:%r ] - [ %p ]  %m%n

###在要输出日志的类中加入相关语句：
###定义属性：protected final Log log = LogFactory.getLog(getClass());
###在相应的方法中：
###if (log.isDebugEnabled()){
###log.debug(“System …..”);}